1. Dependency injection etmek ucun class Bean olmalidi.
Standard object ile Bean ferqi odur ki Bean Spring terefinden idare olunur.

2. DI novleri: 3 usul var.

@Autowired DI (Field injection) is not recommended, because:
    a. we cannot make injected class private which makes it mutable and can be changed easily.
    b. filed injection raise the full application while applying the unit testing.

3. Bean Scopes: Singleton (default), prototype, request, session, globalsession, websocket.


4. @SpringBootApplication annotation.




ORM is used to map the objects to database table
Object Card(card_number, cvv) -> cards table

The only drawback of ORM over Native sql is latency because the java code is converted to sql by ORM.

ORM (1. Jav code, 2. sql) (Hibernate) / Native SQL (1. direct sql)
JPA - Specification

>>> @SneakyThrows annotation.

>>> What is DTO pattern ?

>>> What is the difference between orElse(null) and orElseGet(null) ?
read also orElseThrow().

>>> What are the strategies of @GeneratedValue annotation ?

>>> What is the characteristics of Entity class (in which cases @Entity annotation can be used) ?

>>> Two tables are created by Liquibase - databasechangelog and databasechangeloglock
databasechangelog stores the information when the query executed. It has a column md5sum which generates a unique id.
when something is changed in changelog files, it will throw error because md5sum ids will not match.

>>> Three interfaces for Repository.

>>> @Repository annotation can handle SQL Exception

>>> Communication between microservices - REST, Queue (MessageBrocker).
Feign, RestTemplate, WebClient, HTTPClient



